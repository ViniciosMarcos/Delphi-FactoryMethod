unit Model.Tringulo;

interface

uses
  Model.Interfaces;

type

  TTriangulo = class(TInterfacedObject, ICalculoArea)
  public
    destructor Destroy; override;
    Constructor Create;
    class function New: ICalculadora;
    function CalcularArea(ValorA, ValorB, ValorC: Extended):Extended;
  end;

implementation

uses
  Vcl.Dialogs, System.SysUtils;

{ TTringulo }

function TTriangulo.CalcularArea(ValorA, ValorB, ValorC: Extended): Extended;
begin
  //Verifico se as medidas não são negativas.
  if (ValorA < 0) or (ValorB < 0) then
  begin
    MessageDlg('Não existem medidas negativas. Verifique!', TMsgDlgType.mtInformation, [TMsgDlgBtn.mbOK], 0);
    Abort;
  end;
  Result := (ValorA * ValorB) / 2;
end;

constructor TTriangulo.Create;
begin

end;

destructor TTriangulo.Destroy;
begin
  inherited;
  //Libero da Memória a classe
  Free;
end;



class function TTriangulo.New: ICalculadora;
begin
  Result := Self.Create;
end;

end.
